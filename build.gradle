apply plugin: 'java'
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "maven"

ext {
    ecVersion = "0.0.7"
}

group 'xyz.epoxide.commons.libgdx'
archivesBaseName = "EpoxideCommons-libGDX"
version = getVersionFromJava(file("src/main/java/xyz/epoxide/commons/libgdx/Constants.java"))

configurations {
    shade
    compile.extendsFrom shade
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    maven { url "http://maven.epoxide.xyz" }

}

dependencies {
    compile "com.badlogicgames.gdx:gdx:1.9.5"
    shade "xyz.epoxide.commons:EpoxideCommons:$ecVersion"
}

String getVersionFromJava(File file) {

    String build = System.getenv("BUILD_NUMBER") ?: "0";
    def outfile = "";
    def ln = System.getProperty("line.separator")

    String prefix = "public static final String VERSION = \"";
    file.eachLine { String s ->

        String v = s.trim();
        if (v.startsWith(prefix)) {
            s = s.replaceAll("0.0.0.0\";", ext.ecVersion+".${build}\";");
        }
        outfile += (s + ln);
    }

    file.write(outfile);

    return "$ecVersion.$build";
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task buildJar(type: Jar) {
    from sourceSets.main.output
}

artifacts {
    archives buildJar
    archives sourcesJar
    archives javadocJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file:///var/www/html/maven")
        }
    }
}