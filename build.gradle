apply plugin: 'java'
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "maven"

group 'xyz.epoxide.commons.libgdx'
archivesBaseName = "EpoxideCommons-libGDX"
version = getVersionFromJava(file("src/main/java/xyz/epoxide/commons/libgdx/Constants.java"))

configurations {
    shaded
    compile.extendsFrom shaded
}

repositories{
    mavenLocal()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    maven { url "http://maven.epoxide.xyz" }

}

dependencies {
    compile "com.badlogicgames.gdx:gdx:1.9.5"
    shaded "xyz.epoxide.commons:EpoxideCommons:0.0.6"
}

String getVersionFromJava(File file) {

    String major = "0";
    String minor = "0";

    String build = System.getenv("BUILD_NUMBER") ?: "0";
    def outfile = "";
    def ln = System.getProperty("line.separator")

    String prefix = "public static final String VERSION_NUMER = \"";
    file.eachLine { String s ->

        String v = s.trim();
        if (v.startsWith(prefix)) {
            v = v.substring(prefix.length(), v.length() - 2);
            String[] pts = v.split("\\.");

            major = pts[0];
            minor = pts[1];
            s = s.replaceAll(".0\";", ".${build}\";");
        }
        outfile += (s + ln);
    }

    file.write(outfile);

    return "$major.$minor.$build";
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task buildJar(type: Jar) {
    from sourceSets.main.output

    from {
        configurations.shaded.collect {
            it.isDirectory() ? it : zipTree(it).matching {
                exclude "META-INF", "META-INF/**", "*META-INF*", "meta-inf"
                exclude "**.jar", "**/*.jar", "*.jar"
            }
        }
    }
}

artifacts {
    archives buildJar
    archives sourcesJar
    archives javadocJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file:///var/www/html/maven")
        }
    }
}